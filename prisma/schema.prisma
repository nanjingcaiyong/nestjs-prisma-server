// model 命名满足大写驼峰，参考：https://www.prisma.io/docs/orm/reference/prisma-schema-reference#naming-conventions

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TrackType {
  CPS
  GA3
  GA4
}

model User {
  id          Int    @id @default(autoincrement())
  userName    String @db.VarChar(100)
}

model Role {
  id          Int    @id @default(autoincrement())
  roleName    String @db.VarChar(100)
}

model Story {
  id          Int       @id @default(autoincrement())
  storyName   String    @db.VarChar(100)
  creatorName String    @db.VarChar(30) // 一个中文占三个字节，其他数字、英文、符号占一个字节，emoji占四个字节。一些复杂文字、繁体字占四个字节
  createAt    DateTime  @updatedAt @db.Timestamp()
  updateAt    DateTime  @updatedAt @db.Timestamp()
  status      Int       @default(1) @db.TinyInt
  description String    @db.VarChar(300)
  pages       StoryPage []
}

model Page {
  id          Int       @id @default(autoincrement())
  pageName    String    @unique @db.VarChar(60)
  createAt    DateTime  @updatedAt @db.Timestamp()
  updateAt    DateTime  @updatedAt @db.Timestamp()
  status      Int       @default(1) @db.TinyInt
  description String    @db.VarChar(300)
  storys       StoryPage[]
}

model StoryPage {
  story       Story     @relation(fields: [storyId], references: [id])
  storyId     Int
  page        Page      @relation(fields: [pageId], references: [id])
  pageId      Int
  createAt    DateTime  @updatedAt @db.Timestamp()
  updateAt    DateTime  @updatedAt @db.Timestamp()
  
  @@id([storyId, pageId])
}


model Point {
  id          Int       @id @default(autoincrement())
  key         String    @db.VarChar(100)
  creatorName String    @db.VarChar(30)
  description String    @db.VarChar(300)
  createAt    DateTime  @updatedAt @db.Timestamp()
  updateAt    DateTime  @updatedAt @db.Timestamp()
  status      Int       @default(1) @db.TinyInt
} 

model Track {
  id          Int       @id @default(autoincrement())
  type        TrackType
  content     String    @db.VarChar(500)
  createAt    DateTime  @updatedAt @db.Timestamp()
  updateAt    DateTime  @updatedAt @db.Timestamp()
  status      Int       @default(1) @db.TinyInt
}