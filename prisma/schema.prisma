// model 命名满足大写驼峰，参考：https://www.prisma.io/docs/orm/reference/prisma-schema-reference#naming-conventions

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TrackType {
  CPS
  GA3
  GA4
}


model Story {
  id          Int       @id @default(autoincrement())
  storyName   String    @map("story_name") @db.VarChar(100)
  creator     String    @db.VarChar(30) // 一个中文占三个字节，其他数字、英文、符号占一个字节，emoji占四个字节。一些复杂文字、繁体字占四个字节
  description String    @db.VarChar(255)
  pages       Page []
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt

  @@map("storys")
}

model Page {
  id          Int       @id @default(autoincrement())
  pageName    String    @map("page_name") @unique @db.VarChar(60)
  description String    @db.VarChar(300)
  storys      Story[]
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt

  @@map("pages")
}

model Point {
  id          Int       @id @default(autoincrement())
  key         String    @db.VarChar(100)
  creator     String    @db.VarChar(30)
  description String    @db.VarChar(300)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6) // 6 是精确到微秒
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt

  @@map("points")
} 

model Track {
  id          Int       @id @default(autoincrement())
  type        TrackType
  content     String    @db.VarChar(500)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt

  @@map("tracks")
}

// 用户
model User {
  id          Int       @id @default(autoincrement())
  // 用户名
  userName    String?   @unique @map("user_name") @db.VarChar(100)
  // 邮箱
  email       String?   @unique @db.VarChar(100)
  // 性别（0：男，1：女，2：位置)
  sex         Int?      @unique @db.TinyInt
  // 员工编号
  no          String?   @unique @db.VarChar(50)
  // 职位信息
  jobName     String?   @map("job_name") @db.VarChar(100)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt

  @@map("users")
}

// 账号
model Account {
  id          Int       @id @default(autoincrement())
  // 账号
  account     String?   @unique @db.VarChar(100)
  // 邮箱
  email       String?   @unique @db.VarChar(100)
  // 密码
  password    String?   @db.VarChar(100)
  // 状态状态(0: 禁用, 1: 启用)
  state       Int       @default(0)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt
  roles       Role[]

  @@index([account, email])
  @@map("accounts")
}

// 角色
model Role {
  id          Int       @id @default(autoincrement())
  // 角色名称
  roleName    String?   @unique @map("role_name") @db.VarChar(100)
  // 创建者
  creator     String?   @db.VarChar(100)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt
  accounts    Account[]
  auths       Auth[]
  @@map("roles")
}


// 权限
model Auth {
  id          Int       @id @default(autoincrement())
  // 权限名称
  authName    String?   @unique @map("auth_name") @db.VarChar(100)
  // 权限类型 (0：页面权限，1：操作权限，2：接口权限)
  type        Int?      @db.TinyInt
  // 备注
  desc        String?   @db.VarChar(100)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt
  roles       Role[]
  menus       Menu[]

  @@map("auth")
}

// 菜单
model Menu {
  id          Int       @id @default(autoincrement())
  menuName    String?   @unique @map("menu_name") @db.VarChar(100)
  code        String?   @db.VarChar(50)
  description String?   @db.VarChar(500)
  path        String?   @db.VarChar(100)
  type        Int
  pid         Int
  creator     String    @db.VarChar(100)
  createAt    DateTime  @default(now()) @map("created_at") @db.DateTime(6)
  updateAt    DateTime  @updatedAt @map("updated_at") @db.DateTime(6)
  status      Int       @default(1) @db.TinyInt
  auths        Auth[]

  @@map("menus")
}
